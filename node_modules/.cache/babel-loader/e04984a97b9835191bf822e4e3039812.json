{"ast":null,"code":"var _jsxFileName = \"/Users/rohan/Code/Personal Project/Weather-App/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const apiKey = \"4856d71a9297ddfb8f3214ae678713af\";\n  const [weatherData, setWeatherData] = useState([{}]);\n  const [city, setCity] = useState(\"\");\n  const formattedDate = moment().format(\"h:mm a - dddd, Do MMMM YYYY \");\n\n  const getWeather = async e => {\n    if (e.key === \"Enter\") {\n      const longlat = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${e.target.value}&limit=5&appid=${apiKey}`);\n      const longlatresponse = await longlat.json();\n      const weatherResponse = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${longlatresponse[0].lat}&lon=${longlatresponse[0].lon}&appid=${apiKey}&units=metric`);\n      const weather = await weatherResponse.json();\n      console.log(weather);\n      setCity(\"\");\n      setWeatherData(weather);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input\",\n      placeholder: \"Another location\",\n      onChange: e => setCity(e.target.value),\n      value: city,\n      onKeyPress: getWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), !weatherData.main ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to my Weather App! Please enter a City to get the weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weatherData.name, \", \", weatherData.sys.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [Math.round(weatherData.main.temp), \"\\xB0c \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Humidity: \", weatherData.main.humidity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", formattedDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: weatherData.weather.map(weather => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [weather.main, \", \", weather.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://openweathermap.org/img/w/${weather.icon}.png`,\n              alt: \"weathericon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, weather, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"P2ZU9NxmMW6cYU4ngnQWuSuTk2U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","moment","App","apiKey","weatherData","setWeatherData","city","setCity","formattedDate","format","getWeather","e","key","longlat","fetch","target","value","longlatresponse","json","weatherResponse","lat","lon","weather","console","log","main","name","sys","country","Math","round","temp","humidity","map","description","icon"],"sources":["/Users/rohan/Code/Personal Project/Weather-App/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport React, { useState } from \"react\";\nimport moment from \"moment\";\n\nfunction App() {\n  const apiKey = \"4856d71a9297ddfb8f3214ae678713af\";\n  const [weatherData, setWeatherData] = useState([{}]);\n  const [city, setCity] = useState(\"\");\n\n  const formattedDate = moment().format(\"h:mm a - dddd, Do MMMM YYYY \");\n\n  const getWeather = async (e) => {\n    if (e.key === \"Enter\") {\n      const longlat = await fetch(\n        `http://api.openweathermap.org/geo/1.0/direct?q=${e.target.value}&limit=5&appid=${apiKey}`\n      );\n      const longlatresponse = await longlat.json();\n      const weatherResponse = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?lat=${longlatresponse[0].lat}&lon=${longlatresponse[0].lon}&appid=${apiKey}&units=metric`\n      );\n      const weather = await weatherResponse.json();\n      console.log(weather);\n      setCity(\"\");\n      setWeatherData(weather);\n    }\n  };\n  return (\n    <div className=\"container\">\n      <input\n        className=\"input\"\n        placeholder=\"Another location\"\n        onChange={(e) => setCity(e.target.value)}\n        value={city}\n        onKeyPress={getWeather}\n      />\n\n      {!weatherData.main ? (\n        <div>\n          <p>\n            Welcome to my Weather App! Please enter a City to get the weather\n          </p>\n        </div>\n      ) : (\n        <div>\n          <p>\n            {weatherData.name}, {weatherData.sys.country}\n          </p>\n          <p>{Math.round(weatherData.main.temp)}Â°c </p>\n          <p>Humidity: {weatherData.main.humidity}</p>\n          <p> {formattedDate}</p>\n          <ul>\n            {weatherData.weather.map((weather) => {\n              return (\n                <li key={weather}>\n                  <p>\n                    {weather.main}, {weather.description}\n                  </p>\n                  <img\n                    src={`http://openweathermap.org/img/w/${weather.icon}.png`}\n                    alt=\"weathericon\"\n                  ></img>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,MAAM,GAAG,kCAAf;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;EACA,MAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;EAEA,MAAMQ,aAAa,GAAGP,MAAM,GAAGQ,MAAT,CAAgB,8BAAhB,CAAtB;;EAEA,MAAMC,UAAU,GAAG,MAAOC,CAAP,IAAa;IAC9B,IAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuB;MACrB,MAAMC,OAAO,GAAG,MAAMC,KAAK,CACxB,kDAAiDH,CAAC,CAACI,MAAF,CAASC,KAAM,kBAAiBb,MAAO,EADhE,CAA3B;MAGA,MAAMc,eAAe,GAAG,MAAMJ,OAAO,CAACK,IAAR,EAA9B;MACA,MAAMC,eAAe,GAAG,MAAML,KAAK,CAChC,uDAAsDG,eAAe,CAAC,CAAD,CAAf,CAAmBG,GAAI,QAAOH,eAAe,CAAC,CAAD,CAAf,CAAmBI,GAAI,UAASlB,MAAO,eAD3F,CAAnC;MAGA,MAAMmB,OAAO,GAAG,MAAMH,eAAe,CAACD,IAAhB,EAAtB;MACAK,OAAO,CAACC,GAAR,CAAYF,OAAZ;MACAf,OAAO,CAAC,EAAD,CAAP;MACAF,cAAc,CAACiB,OAAD,CAAd;IACD;EACF,CAdD;;EAeA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE;MACE,SAAS,EAAC,OADZ;MAEE,WAAW,EAAC,kBAFd;MAGE,QAAQ,EAAGX,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACI,MAAF,CAASC,KAAV,CAH1B;MAIE,KAAK,EAAEV,IAJT;MAKE,UAAU,EAAEI;IALd;MAAA;MAAA;MAAA;IAAA,QADF,EASG,CAACN,WAAW,CAACqB,IAAb,gBACC;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADD,gBAOC;MAAA,wBACE;QAAA,WACGrB,WAAW,CAACsB,IADf,QACuBtB,WAAW,CAACuB,GAAZ,CAAgBC,OADvC;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAA,WAAIC,IAAI,CAACC,KAAL,CAAW1B,WAAW,CAACqB,IAAZ,CAAiBM,IAA5B,CAAJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE;QAAA,yBAAc3B,WAAW,CAACqB,IAAZ,CAAiBO,QAA/B;MAAA;QAAA;QAAA;QAAA;MAAA,QALF,eAME;QAAA,gBAAKxB,aAAL;MAAA;QAAA;QAAA;QAAA;MAAA,QANF,eAOE;QAAA,UACGJ,WAAW,CAACkB,OAAZ,CAAoBW,GAApB,CAAyBX,OAAD,IAAa;UACpC,oBACE;YAAA,wBACE;cAAA,WACGA,OAAO,CAACG,IADX,QACmBH,OAAO,CAACY,WAD3B;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAIE;cACE,GAAG,EAAG,mCAAkCZ,OAAO,CAACa,IAAK,MADvD;cAEE,GAAG,EAAC;YAFN;cAAA;cAAA;cAAA;YAAA,QAJF;UAAA,GAASb,OAAT;YAAA;YAAA;YAAA;UAAA,QADF;QAWD,CAZA;MADH;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QAhBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA2CD;;GAjEQpB,G;;KAAAA,G;AAmET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}